# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  install:
    docker:
      - image: circleci/python:3.7.3

    working_directory: ~/project

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # pass installed python environment to another jobs
      - persist_to_workspace:
          root: .
          paths:
            - ./venv

  test:
    docker:
      - image: circleci/python:3.7.3

    working_directory: ~/project

    steps: 
      - checkout
        
      # load preinstalled python environment
      - attach_workspace:
          at: .

      # run tests
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test
      # run lint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            sudo make install-hadolint
            make lint

  dockerize-and-publish:
    docker:
      - image: circleci/python:3.7.3

    working_directory: ~/project

    steps: 
      - checkout

      # load preinstalled python environment
      - attach_workspace:
          at: .

      - setup_remote_docker:
          version: 20.10.14

      # Build and publish docker image    
      - run:
          name: publish-docker
          command: |
            . venv/bin/activate
            docker login --username $dockerhub_username --password $dockerhub_password
            docker build -t $image_name:latest .
            docker tag $image_name:latest $dockerhub_username/$image_name
            docker push $dockerhub_username/$image_name

workflows:
  version: 2
  build:
      jobs:
        - install
        - test:
            requires:
            - install
        - dockerize-and-publish:
            requires:
            - test
            context: dockerhub-credentials
